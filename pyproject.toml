[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cycling-dynamics"
dynamic = ["version"]
description = 'Cycling (Bicycling) models of motion, air drag, rolling resistance, power calculations.'
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
keywords = ["cycling", "bicycle", "dynamics", "speed", "Rolling Resistance", "Air Resistance", "Calculations", "Marginal Gains"]
authors = [
  { name = "Vincent Davis", email = "v@heteroskedastic.org" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["numpy==1.26.4",
    "pandas==2.2.1",
    "pyarrow==15.0.1",
    "garmin-fit-sdk==21.133.0",
    "plotly==5.20.0",
]

[project.urls]
Documentation = "https://github.com/vincentdavis/cycling-dynamics#readme"
Issues = "https://github.com/vincentdavis/cycling-dynamics/issues"
Source = "https://github.com/vincentdavis/cycling-dynamics"

[tool.hatch.version]
path = "src/cycling_dynamics/__about__.py"

[tool.hatch.envs.default]
dependencies = [
  "coverage[toml]>=6.5",
  "pytest",
]
[tool.hatch.envs.default.scripts]
test = "pytest {args:tests}"
test-cov = "coverage run -m pytest {args:tests}"
cov-report = [
  "- coverage combine",
  "coverage report",
]
cov = [
  "test-cov",
  "cov-report",
]

[[tool.hatch.envs.all.matrix]]
python = ["3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = [
  "mypy>=1.8.0",
]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/cycling_dynamics tests}"

[tool.coverage.run]
source_pkgs = ["cycling_dynamics", "tests"]
branch = true
parallel = true
omit = [
  "src/cycling_dynamics/__about__.py",
]

[tool.coverage.paths]
cycling_dynamics = ["src/cycling_dynamics", "*/cycling-dynamics/src/cycling_dynamics"]
tests = ["tests", "*/cycling-dynamics/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]
